module Game

open "UnityEngine.dll"
open UnityEngine

worldEntity World = {

  Goblins   : [Goblin]    
  AvatarGen : AvatarGenerator 

  rule Goblins =
    for x in [0..AvatarGen.Amount - 1] do
      yield (Goblin.Create(
              [for characteristic in AvatarGen.SettingsList do 
              select (characteristic.Item1, 
                    Random.Range(characteristic.Item2.Item1, 
                    characteristic.Item2.Item2))]
            )) :: Goblins  
    wait false
  
  Create() =  
    let avatar_generator = AvatarGenerator.Find()
    {
       AvatarGen = avatar_generator 
       Goblins = []
    }    
}


entity Goblin = { 
  inherit UnityGoblin 
  settings : [(string * int)]
  normalActivity : bool
  Velocity : Vector3
  ref personalityValue : int
  ref personalityIndex : int
  ref newPosition : Vector3

  //moving right           
  rule Position, CurrentAnimation =     
    wait Input.GetKey(KeyCode.Space) 
    yield Position + new Vector3(dt *2.0f, 0.0f, 0.0f), GoblinAnimation.Run
 
  //moving left
  rule Position, CurrentAnimation =
    wait Input.GetKey(KeyCode.C)
    yield Position - new Vector3(dt*2.0f, 0.0f, 0.0f), GoblinAnimation.Walk

  rule personalityValue, personalityIndex = 
    let randomPersonalityIndex = Random.Range(0, settings.Count * 2)
    if (randomPersonalityIndex > (settings.Count)-1) then
      let personalityValue = settings.[randomPersonalityIndex - settings.Count]
      yield 100 - personalityValue.Item2, randomPersonalityIndex
    else
      let personalValue =  settings.[randomPersonalityIndex]
      yield personalValue.Item2, randomPersonalityIndex
    wait 10.0f
  
  rule normalActivity =
    let chance_factor = 1
    if ((personalityValue / Random.Range(1,100)) > chance_factor) then
      UnityGoblin.Animate(personalityIndex)    
      yield true 
    else
      yield false
    wait 10.0f
     

  rule Position, Velocity = 
    let dir0 = newPosition - Position
    yield Position, dir0.normalized
    wait Vector3.Dot(dir0, newPosition - Position) < 0.0f
    yield newPosition , Vector3.zero
     
  rule Position = yield Position + Velocity * dt

  Create(Settings : [(string * int)]) =  
    let goblin = UnityGoblin.Instantiate()
    let randomvector = new Vector3(Random.Range(goblin.Position.x + 10.0f,  goblin.Position.x - 20.0f), goblin.Position.y, Random.Range(goblin.Position.z + 10.0f, goblin.Position.z -  20.0f))
    {
      Velocity = Vector3.zero
      newPosition = randomvector
      personalityValue = 0
      personalityIndex = 0
      normalActivity = false
      settings = Settings
      UnityGoblin = goblin
    }
}